version: '3.8'

services:
  # Frontend Service (Next.js)
  frontend:
    build: .
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - nginx
    networks:
      - microservices-network

  # Authentication Service
  auth-service:
    build: ./microservices/auth-service
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb-auth:27017/auth-service
      - JWT_SECRET=jwt_secret_key_for_microservices
    depends_on:
      - mongodb-auth
    networks:
      - microservices-network

  # Product Service
  product-service:
    build: ./microservices/product-service
    container_name: product-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DATABASE_URL=postgres://postgres:postgres@postgres-products:5432/product-catalog
    depends_on:
      - postgres-products
    networks:
      - microservices-network

  # Order Service
  order-service:
    build: ./microservices/order-service
    container_name: order-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb-orders:27017/order-service
      - JWT_SECRET=jwt_secret_key_for_microservices
      - PRODUCT_SERVICE_URL=http://product-service:3002/api
    depends_on:
      - mongodb-orders
      - product-service
    networks:
      - microservices-network

  # Admin Dashboard (Angular)
  admin-dashboard:
    build: ./microservices/admin-dashboard
    container_name: admin-dashboard
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=production
    networks:
      - microservices-network

  # Nginx API Gateway
  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - product-service
      - order-service
      - admin-dashboard
    networks:
      - microservices-network

  # MongoDB for Auth Service
  mongodb-auth:
    image: mongo:latest
    container_name: mongodb-auth
    ports:
      - "27017:27017"
    volumes:
      - mongodb-auth-data:/data/db
    networks:
      - microservices-network

  # MongoDB for Order Service
  mongodb-orders:
    image: mongo:latest
    container_name: mongodb-orders
    ports:
      - "27018:27017"
    volumes:
      - mongodb-orders-data:/data/db
    networks:
      - microservices-network

  # PostgreSQL for Product Service
  postgres-products:
    image: postgres:latest
    container_name: postgres-products
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: product-catalog
    volumes:
      - postgres-products-data:/var/lib/postgresql/data
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  mongodb-auth-data:
  mongodb-orders-data:
  postgres-products-data: